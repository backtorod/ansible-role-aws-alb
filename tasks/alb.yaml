---

- name: template terraform backend definition
  template:
    src: "{{ terraform_context }}/{{ item }}.tf.j2"
    dest: "{{ terraform_context }}/{{ item }}.tf"
  with_items: "{{ templates.backends }}"

- name: initialize terraform
  shell: |
    terraform init {{ terraform_extra_args }}
  args:
    chdir: "{{ terraform_context }}"
  register: terraform_init

- debug: var=terraform_init

- name: fetch current terraform state (if any)
  shell: |
    terraform state pull > {{ terraform_output_file }}
  args:
    chdir: "{{ terraform_context }}"

- name: template terraform resources definition
  template:
    src: "{{ terraform_context }}/{{ item }}.tf.j2"
    dest: "{{ terraform_context }}/{{ item }}.tf"
  with_items: "{{ templates.resources }}"

- name: check hsl format
  shell: |
    terraform fmt \
      {{ terraform_extra_args }} \
      -check \
      -diff
  args:
    chdir: "{{ terraform_context }}"
  register: terraform_format

- debug: var=terraform_format

- name: check hsl syntax
  shell: |
    terraform validate \
      {{ terraform_extra_args }}
  args:
    chdir: "{{ terraform_context }}"
  register: terraform_syntax

- debug: var=terraform_syntax

- name: plan provisioning
  shell: |
    terraform plan \
      {{ terraform_extra_args }}
  register: terraform_plan
  args:
    chdir: "{{ terraform_context }}"

- debug: var=terraform_plan

- name: apply state
  shell: |
    terraform apply \
      {{ terraform_extra_args }} \
      -auto-approve
  args:
    chdir: "{{ terraform_context }}"
  register: terraform_apply

- debug: var=terraform_apply


