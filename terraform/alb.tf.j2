resource "aws_alb" "alb" {
  name            = "{{ alb_name }}"
  subnets         = [{% for subnet in alb_subnets %}"{{ subnet }}"{% if not loop.last %}, {% endif %}{% endfor %}]
  security_groups = [{% for security_group in alb_security_groups %}"{{ security_group }}"{% if not loop.last %}, {% endif %}{% endfor %}]
  internal        = {{ alb_internal }}
  idle_timeout    = {{ alb_idle_timeout }}
  tags = {
    Name = "{{ alb_name }}"
  }
  access_logs {
    bucket = "{{ alb_access_logs_bucket }}"
    prefix = "{{ alb_access_logs_prefix }}"
  }
}

resource "aws_alb_target_group" "alb_target_group" {
  name     = "{{ alb_target_group_name }}"
  port     = "{{ alb_target_group_port }}"
  protocol = "{{ alb_target_group_protocol }}"
  vpc_id   = "{{ vpc_id }}"
  tags = {
    Name = "{{ alb_name }}-target-group"
  }
  stickiness {
    type            = "{{ alb_target_group_enable_stickiness_type }}"
    cookie_duration = {{ alb_target_group_enable_stickiness_cookie_duration }}
    enabled         = {{ alb_target_group_enable_stickiness }}
  }
  health_check {
    healthy_threshold   = {{ alb_target_group_health_check_healthy_threshold }}
    unhealthy_threshold = {{ alb_target_group_health_check_unhealthy_threshold }}
    timeout             = {{ alb_target_group_health_check_timeout }}
    interval            = {{ alb_target_group_health_check_interval }}
    path                = "{{ alb_target_group_health_check_path }}"
    port                = "{{ alb_target_group_health_check_port }}"
  }
}

resource "aws_alb_listener" "alb_listener" {
  load_balancer_arn = "${aws_alb.alb.arn}"
  port              = {{ alb_listener_port }}
  protocol          = "{{ alb_listener_protocol }}"

  default_action {
    target_group_arn = "${aws_alb_target_group.alb_target_group.arn}"
    type             = "forward"
  }
}

{# resource "aws_alb_listener_rule" "listener_rule" {
  depends_on   = ["aws_alb_target_group.alb_target_group"]
  listener_arn = "${aws_alb_listener.alb_listener.arn}"
  priority     = "${var.priority}"
  action {
    type             = "forward"
    target_group_arn = "${aws_alb_target_group.alb_target_group.id}"
  }
  condition {
    field  = "path-pattern"
    values = ["${var.alb_path}"]
  }
} #}


{# #Autoscaling Attachment
resource "aws_autoscaling_attachment" "svc_asg_external2" {
  alb_target_group_arn   = "${aws_alb_target_group.alb_target_group.arn}"
  autoscaling_group_name = "${aws_autoscaling_group.svc_asg.id}"
} #}

{# #Instance Attachment
resource "aws_alb_target_group_attachment" "svc_physical_external" {
  target_group_arn = "${aws_alb_target_group.alb_target_group.arn}"
  target_id        = "${aws_instance.svc.id}"
  port             = 8080
} #}